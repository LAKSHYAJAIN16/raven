import Head from "next/head";
import React, { useRef } from "react";
import { QueryClient, QueryClientProvider } from "react-query";
import NotificationManager, {
  NotificationType,
} from "../components/NotificationManager";
import NotificationParent from "../components/NotificationParent";
import Notif from "../components/Notif";

const queryClient = new QueryClient();
const Home: React.FC = () => {
  function notifTest() {
    console.log("hey!");
    Notif.add({
      color: "red",
      bg: "bg-red-100",
      border: "border-red-500",
      text: "text-red-900",
      fill: "text-red-500",
      type: NotificationType.alert,
      duration: 1000,
      head: "Alert!",
      content: "That username is taken",
    });
  }

  return (
    <QueryClientProvider client={queryClient}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="h-screen absolute w-screen z-20">
        <div className="flex h-screen w-screen">
          {/* Actual thing */}
          <div className="m-auto flex flex-col items-center">
            <h1 className="font-ez text-center text-8xl">raven</h1>
            <p className="text-center font-ez">
              <span
                onClick={() => notifTest()}
                className="font-extrabold text-transparent text-4xl bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600"
              >
                privacy.{" "}
              </span>
              <span className="font-extrabold text-transparent text-4xl bg-clip-text bg-gradient-to-r from-green-400 to-blue-600">
                security.{" "}
              </span>
              <span className="font-extrabold text-transparent text-4xl bg-clip-text bg-gradient-to-r from-orange-400 to-red-600">
                the future.{" "}
              </span>
            </p>

            <br />
            <a href="/signup">
              <button className="relative inline-block text-lg group w-40 font-ez">
                <span className="relative z-10 block px-5 py-3 overflow-hidden font-medium leading-tight text-gray-800 transition-colors duration-300 ease-out border-2 border-gray-900 rounded-lg group-hover:text-white">
                  <span className="absolute inset-0 w-full h-full px-5 py-3 rounded-lg bg-gray-50"></span>
                  <span className="absolute left-0 w-48 h-48 -ml-2 transition-all duration-300 origin-top-right -rotate-90 -translate-x-full translate-y-12 bg-gray-900 group-hover:-rotate-180 ease"></span>
                  <span className="relative">join now</span>
                </span>
              </button>
            </a>
          </div>
        </div>
      </div>

      <NotificationParent />
      {/* <NotificationManager
        notifications={[
          {
            color: "red",
            bg : "bg-red-100",
            border : "border-red-500",
            text : "text-red-900",
            fill : "text-red-500",
            type: NotificationType.alert,
            duration: 1000,
            head : "Alert!",
            content : "That username is taken",
          },
          {
            color: "blue",
            bg : "bg-blue-100",
            border : "border-blue-500",
            text : "text-blue-900",
            fill : "text-blue-500",
            type: NotificationType.information,
            duration: 1000,
            head : "Alert!",
            content : "That username is taken",
          },
          {
            color: "teal",
            bg : "bg-teal-100",
            border : "border-teal-500",
            text : "text-teal-900",
            fill : "text-teal-500",
            type: NotificationType.update,
            duration: 1000,
            head : "Alert!",
            content : "That username is taken",
          },
        ]}
      /> */}
      <div className="h-screen absolute w-screen z-1 background"></div>
    </QueryClientProvider>
  );
};

export default Home;
